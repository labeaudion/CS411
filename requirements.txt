Agile

1) Complete these user stories:
    a) User story 1: As a vanilla git power-user that has never seen GiggleGit before, I want to have clear documentation so I can easily understand how to navigate GiggleGit.
    b) User story 2: As a team lead onboarding an experienced GiggleGit user, I want to have a comparison guide between Git and GiggleGit so the team can understand the differences between the two version control systems and to apply their knowledge from Git to GiggleGit.

2) User story 3: As a project manager, I want to track progress in GiggleGit so I can make sure that projects are completed on time and to see where the team is falling behind.
    Task: Implement a project tracking feature.
        Ticket 1: Define project tracking requirements.
            Talk to other project managers and team members to determine what would be helpful for showing progress when tracking requirements, such as task assignments and due dates.
        Ticket 2: Develop a project dashboard user interface.
            Design and build a user-friendly dashboard that shows the status of different projects and their deadlines, as well as team member contributions.

3) This is not a user story because it doesn't explain why the user wants authentication for GiggleGit. This would be considered a requirement because it doesn't explain how the user would benefit from authentication and instead focuses on what the system should do.



Formal Requirements

1) List one goal and one non-goal.
    Goal: Evaluate user engagement and satisfaction with syncing code changes while providing humorous feedback.
    Non-goal: Develop a user analytics platform.

2) Create two non-functional requirements.
    Non-functional requirement 1: Access Control
    Non-functional requirement 2: User Study Management

3) For each non-functional requirement, create two functional requirements (for a grand total of four functional requirements). 
    Non-functional requirement 1: Access Control
        Functional requirement 1: Implement a role-based system where users with certain roles can access certain features in SnickerSync.
        Functional requirement 2: Create an audit logging feature that keeps track of potentional role changes of each user.

    Non-functional requirement 2: User Study Management
        Functional requirement 1: Develop a random assignment algorithm that assigns users to different control groups for user studies.
        Functional requirement 2: Create a dashboard for PMs to manage user studies, view assigned groups, and track participant engagement.